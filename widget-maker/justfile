release:
    cargo build --release

types:
    typeshare ./src --lang=typescript --output-file=../react-ui/src/types.ts

run:
    RUST_LOG=info cargo run

clean:
    rm -rf widget-maker.app
    rm -rf dmg
    rm -rf icon.iconset
    rm -f widget-maker.dmg
    rm -f icon.icns

icons:
    mkdir -p icon.iconset
    cp ./build_assets/app-icon2.png icon.iconset/icon.png
    sips -z 16 16     icon.iconset/icon.png --out icon.iconset/icon_16x16.png
    sips -z 32 32     icon.iconset/icon.png --out icon.iconset/icon_16x16@2x.png
    sips -z 32 32     icon.iconset/icon.png --out icon.iconset/icon_32x32.png
    sips -z 64 64     icon.iconset/icon.png --out icon.iconset/icon_32x32@2x.png
    sips -z 128 128   icon.iconset/icon.png --out icon.iconset/icon_128x128.png
    sips -z 256 256   icon.iconset/icon.png --out icon.iconset/icon_128x128@2x.png
    sips -z 256 256   icon.iconset/icon.png --out icon.iconset/icon_256x256.png
    sips -z 512 512   icon.iconset/icon.png --out icon.iconset/icon_256x256@2x.png
    sips -z 512 512   icon.iconset/icon.png --out icon.iconset/icon_512x512.png
    cp icon.iconset/icon.png icon.iconset/icon_512x512@2x.png
    iconutil -c icns icon.iconset
    rm -rf icon.iconset

app: clean release icons
    mkdir -p widget-maker.app/Contents/MacOS
    mkdir -p widget-maker.app/Contents/Resources
    cp target/release/widget-maker widget-maker.app/Contents/MacOS/
    cp build_assets/Info.plist widget-maker.app/Contents/
    cp icon.icns widget-maker.app/Contents/Resources/
    touch widget-maker.app

package: app
    mkdir -p dmg
    cp -R widget-maker.app dmg/
    hdiutil create -volname "Widget Maker" -srcfolder dmg -ov -format UDZO widget-maker.dmg
    rm -rf dmg
